.stars {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 120%;
  transform: rotate(-45deg);
  z-index: 0; /* Ensure it stays behind your content */
}

.star {
  --star-color: #DA7D5F; /* Matching your peach color theme */
  --star-tail-length: 10em;
  --star-tail-height: 4px;
  --star-width: calc(var(--star-tail-length) / 5);
  --fall-duration: 15s;
  --tail-fade-duration: var(--fall-duration);
  position: absolute;
  top: var(--top-offset);
  left: 0;
  width: var(--star-tail-length);
  height: var(--star-tail-height);
  color: var(--star-color);
  background: linear-gradient(45deg, currentColor, transparent);
  border-radius: 50%;
  filter: drop-shadow(0 0 6px currentColor);
  transform: translate3d(104em, 0, 0);
  animation: fall var(--fall-duration) var(--fall-delay) linear infinite, tail-fade var(--tail-fade-duration) var(--fall-delay) ease-out infinite;
}

/* Generate random properties for each star */
/* We need to use predefined classes instead of SCSS loops */
.star-1 { --star-tail-length: 5.63em; --top-offset: 86.33vh; --fall-duration: 8.32s; --fall-delay: 1.11s; }
.star-2 { --star-tail-length: 6.42em; --top-offset: 28.95vh; --fall-duration: 9.54s; --fall-delay: 3.75s; }
.star-3 { --star-tail-length: 6.15em; --top-offset: 53.28vh; --fall-duration: 6.78s; --fall-delay: 2.34s; }
/* Add more for each star with different values */
/* ... */
.star-50 { --star-tail-length: 5.87em; --top-offset: 77.21vh; --fall-duration: 7.92s; --fall-delay: 4.45s; }

.star::before, .star::after {
  position: absolute;
  content: '';
  top: 0;
  left: calc(var(--star-width) / -2);
  width: var(--star-width);
  height: 100%;
  background: linear-gradient(45deg, transparent, currentColor, transparent);
  border-radius: inherit;
  animation: blink 2s linear infinite;
}

.star::before {
  transform: rotate(45deg);
}

.star::after {
  transform: rotate(-45deg);
}

@keyframes fall {
  to {
    transform: translate3d(-30em, 0, 0);
  }
}

@keyframes tail-fade {
  0%, 50% {
    width: var(--star-tail-length);
    opacity: 1;
  }
  70%, 80% {
    width: 0;
    opacity: 0.4;
  }
  100% {
    width: 0;
    opacity: 0;
  }
}

@keyframes blink {
  50% {
    opacity: 0.6;
  }
}

@media screen and (max-width: 750px) {
  .star {
    animation: fall var(--fall-duration) var(--fall-delay) linear infinite;
  }
}.stars {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 120%;
  transform: rotate(-45deg);
  z-index: -5; /* Ensure it stays behind your content */
}

.star {
  --star-color: #FFDAB9; /* Matching your peach color theme */
  --star-tail-length: 6em;
  --star-tail-height: 2px;
  --star-width: calc(var(--star-tail-length) / 6);
  --fall-duration: 9s;
  --tail-fade-duration: var(--fall-duration);
  position: absolute;
  top: var(--top-offset);
  left: 0;
  width: var(--star-tail-length);
  height: var(--star-tail-height);
  color: var(--star-color);
  background: linear-gradient(45deg, currentColor, transparent);
  border-radius: 50%;
  filter: drop-shadow(0 0 6px currentColor);
  transform: translate3d(104em, 0, 0);
  animation: fall var(--fall-duration) var(--fall-delay) linear infinite, tail-fade var(--tail-fade-duration) var(--fall-delay) ease-out infinite;
}

/* Generate random properties for each star */
/* We need to use predefined classes instead of SCSS loops */
.star-1 { --star-tail-length: 5.63em; --top-offset: 86.33vh; --fall-duration: 8.32s; --fall-delay: 1.11s; }
.star-2 { --star-tail-length: 6.42em; --top-offset: 28.95vh; --fall-duration: 9.54s; --fall-delay: 3.75s; }
.star-3 { --star-tail-length: 6.15em; --top-offset: 53.28vh; --fall-duration: 6.78s; --fall-delay: 2.34s; }
/* Add more for each star with different values */
/* ... */
.star-50 { --star-tail-length: 5.87em; --top-offset: 77.21vh; --fall-duration: 7.92s; --fall-delay: 4.45s; }

.star::before, .star::after {
  position: absolute;
  content: '';
  top: 0;
  left: calc(var(--star-width) / -2);
  width: var(--star-width);
  height: 100%;
  background: linear-gradient(45deg, transparent, currentColor, transparent);
  border-radius: inherit;
  animation: blink 2s linear infinite;
}

.star::before {
  transform: rotate(45deg);
}

.star::after {
  transform: rotate(-45deg);
}

@keyframes fall {
  to {
    transform: translate3d(-30em, 0, 0);
  }
}

@keyframes tail-fade {
  0%, 50% {
    width: var(--star-tail-length);
    opacity: 1;
  }
  70%, 80% {
    width: 0;
    opacity: 0.4;
  }
  100% {
    width: 0;
    opacity: 0;
  }
}

@keyframes blink {
  50% {
    opacity: 0.6;
  }
}

@media screen and (max-width: 750px) {
  .star {
    animation: fall var(--fall-duration) var(--fall-delay) linear infinite;
  }
}